stages:
  - pre-build
  - test
  - build
  - deploy

image: node:14

pre-build:
  stage: pre-build
  dependencies: install
  script: 
    - npm install

build:
  stage: build
  dependencies: install
  scripts:
    - npm run build
  artifacts:
    paths:
      - public
  rules:
    if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    when: on_success

test:
  stage: test
  dependencies: 
    - install
    - pre-build
    - build
  script: 
    - npm install
    - npm run test
    - npm run prettier
    - npm run lint

deploy:
  stage: deploy
  dependencies:
    - install
    - build
  script:
    - npx netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
  rules:
    if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    when: on_success



# default:
#   image: node:14-buster

# before_script:
#     - npm install
#     - npm install -g netlify-cli --unsafe-perm=true
#     - npm run build

# deploy-job:
#   stage: deploy
#   script:
#     - netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
# rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#       when: on_success

# wait_for_deploy:
#   stage: wait  
#   only:
#     - merge_requests
#   timeout: 2m
#   before_script:
#     - apk add -q curl jq
#   script:
#     - |-
#         until curl -sH "Authorization: Bearer $NETLIFY_AUTHORIZATION" $DEPLOY_LIST_URL | jq -e '.[0].state == "building"'; do
#           sleep 1s
#         done
#     - |-
#         until curl -sH "Authorization: Bearer $NETLIFY_AUTHORIZATION" $DEPLOY_LIST_URL | jq -e '.[0].state == "ready"'; do
#           sleep 1s
#         done
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     url: $DEPLOY_PREVIEW_URL
#   interruptible: yes

# image: node:14

# stages:
#   - pre-build
#   - test
#   - build
#   - deploy

# install:
#   stage: pre-build
#   script:
#     - npm install
#   cache:
#     key:
#       files:
#         - package-lock.json
#     paths:
#       - node_modules/
#   artifacts:
#     expire_in: 1 days
#     when: on_success
#     paths:
#       - node_modules/

# test:
#   stage: test
#   dependencies:
#     - install
#   script:
#     - npm run test

# prettier:
#   stage: test
#   dependencies:
#     - install
#   script:
#     - npm run prettier

# lint:
#   stage: test
#   dependencies:
#     - install
#   script:
#     - npm run lint

# build:
#   stage: build
#   dependencies:
#     - install
#   script:
#     - npm run build
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#       when: on_success

# deploy:
#   stage: deploy
#   dependencies:
#     - install
#     - build
#   script:
#     - npx netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#       when: on_success
